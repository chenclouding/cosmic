/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package struts.FSM.action;

import java.io.UnsupportedEncodingException;

import hibernate.FSM.FsmProduct;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.hibernate.HibernateException;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import business.FSM.ProductMeasureBusiness;
import business.FSM.UserInfo;
import struts.FSM.form.ProductForm;

/** 
 * MyEclipse Struts
 * Creation date: 12-21-2009
 * 
 * XDoclet definition:
 * @struts.action path="/editProduct" name="productForm" scope="request" validate="true"
 * @struts.action-forward name="success" path="/FSM/cosmicStandard/projectMeasure.jsp" contextRelative="true"
 * @struts.action-forward name="failure" path="/FSM/cosmicStandard/failure.jsp" contextRelative="true"
 */
public class EditProductAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws HibernateException 
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws HibernateException {
		//Integer peerCompId = new Integer(request.getParameter("peerCompId"));
		ProductForm productForm = (ProductForm) form;// TODO Auto-generated method stub
		ProductMeasureBusiness pmb = new ProductMeasureBusiness();//业务层函数,对产品进行增删改查等操作
		FsmProduct fp = new FsmProduct();          //定义实体bean
		
		/*将id为productId的实体bean查找出来*/
		int productId = new Integer(productForm.getId());
		fp = (FsmProduct)pmb.getProductById(productId);
		/*从form表单中获取产品信息,更新实体Bean*/
		String productName = null;
		String productDesp = null;
		try {
			productName = new String(productForm.getProductName().getBytes("ISO-8859-1"),"gb2312");
			productDesp = new String(productForm.getProductDesp().getBytes("ISO-8859-1"),"gb2312");
		} catch (UnsupportedEncodingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		//fp.setId(new Integer(productForm.getProductId()));
		fp.setProductName(productName);
		fp.setProductDesp(productDesp);
		fp.setProductType(new Integer(productForm.getProductType()));
		fp.setDevelopType(new Integer(productForm.getDevelopType()));
		fp.setMeasureMethod(new Integer(productForm.getMeasureMethod()));
		fp.setLifecyclePhase(new Integer(productForm.getLifecyclePhase()));
		fp.setMeasureStatus(new Integer(productForm.getMeasureStatus()));	
		/*调用业务层,添加产品*/
		
		boolean result = pmb.updateProduct(fp);
		if(result==true){
		   //request.setAttribute("layerId", peerComponentForm.getLayerId());//这句的目的是能够转跳回peerComponent.jsp
		   return mapping.findForward("success");
		}else{
		   return mapping.findForward("failure");
		}
	}
}