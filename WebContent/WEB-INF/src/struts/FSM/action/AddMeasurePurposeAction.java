/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package struts.FSM.action;

import java.io.UnsupportedEncodingException;

import hibernate.FSM.FsmMeasurePurpose;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.hibernate.HibernateException;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import business.FSM.StrategyPhase;
import struts.FSM.form.MeasurePurposeForm;

/** 
 * MyEclipse Struts
 * Creation date: 12-13-2009
 * 
 * XDoclet definition:
 * @struts.action path="/addLayer" name="layerForm" scope="request" validate="true"
 * @struts.action-forward name="success" path="/FSM/cosmicStandard/layerList.jsp" contextRelative="true"
 * @struts.action-forward name="failure" path="/FSM/cosmicStandard/failure.jsp" contextRelative="true"
 */
public class AddMeasurePurposeAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws HibernateException 
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws HibernateException {
		MeasurePurposeForm measurePurposeForm = (MeasurePurposeForm) form;// TODO Auto-generated method stub
		StrategyPhase sp = new StrategyPhase();//业务层函数,对度量目的进行增删改查等操作
		FsmMeasurePurpose fmp = new FsmMeasurePurpose();          //定义实体bean
		
		/*从form表单中获取MeasurePurpose信息,赋值给实体Bean*/
		String measurePurposeName = null;
		String measurePurposeDesp = null;
		String measureChose=null;
		String measure[] = request.getParameterValues("measure");
		try {
			measurePurposeName = new String(measurePurposeForm.getMeasurePurposeName().getBytes("ISO-8859-1"),"gb2312");
			measurePurposeDesp = new String(measurePurposeForm.getMeasurePurposeDesp().getBytes("ISO-8859-1"),"gb2312");
			for(int i=0; i<measure.length;i++){
				//将估算目的插入数据库
				measure[i] = new String(measure[i].getBytes("ISO-8859-1"),"gb2312"); 
			 }
			}catch (UnsupportedEncodingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}				
			boolean result=true;
			fmp.setProductId(new Integer(measurePurposeForm.getProductId()));
			fmp.setMeasurePurposeName(measurePurposeName);
			fmp.setMeasurePurposeDesp(measurePurposeDesp);
			measureChose=measure[0]+";";
		for(int i=1; i<measure.length;i++){
			//将估算目的插入数据库
			measureChose+=measure[i]+";";	
			/*调用业务层,添加度量目的*/					
		 }	
		   fmp.setMeasure(measureChose);	
		result = sp.insertMeasurePurpose(fmp);
		if(result==true){
			   return mapping.findForward("success");
			}else{
			   return mapping.findForward("failure");
			}		
	}
}