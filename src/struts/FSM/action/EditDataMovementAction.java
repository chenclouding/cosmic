/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package struts.FSM.action;

import java.io.UnsupportedEncodingException;

import hibernate.FSM.FsmDataMovement;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.hibernate.HibernateException;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import business.FSM.MeasurePhase;
import struts.FSM.form.DataMovementForm;

/** 
 * MyEclipse Struts
 * Creation date: 03-14-2010
 * 
 * XDoclet definition:
 * @struts.action path="/editDataMovement" name="dataMovementForm" scope="request" validate="true"
 * @struts.action-forward name="success" path="/FSM/cosmicStandard/measure/dataMovement.jsp" contextRelative="true"
 * @struts.action-forward name="failure" path="/FSM/cosmicStandard/failure.jsp" contextRelative="true"
 */
public class EditDataMovementAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws HibernateException 
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws HibernateException {
		DataMovementForm dataMovementForm = (DataMovementForm) form;// TODO Auto-generated method stub
		MeasurePhase mp = new MeasurePhase();//业务层函数,对数据移动进行增删改查等操作
		FsmDataMovement fdm = new FsmDataMovement();          //定义实体bean
		
		/*将id为dataMoveId的实体bean查找出来*/
		int dataMoveId = new Integer(dataMovementForm.getId());
		fdm = (FsmDataMovement)mp.getDataMovementById(dataMoveId);
		/*从form表单中获取数据属性信息,更新实体Bean*/
		String dataMoveName = null;
		String dataMoveDesp = null;
		try {
			dataMoveName = new String(dataMovementForm.getDataMoveName().getBytes("ISO-8859-1"),"gb2312");
			dataMoveDesp = new String(dataMovementForm.getDataMoveDesp().getBytes("ISO-8859-1"),"gb2312");
		} catch (UnsupportedEncodingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		fdm.setFuncProsId(new Integer(dataMovementForm.getFuncProsId()));
		fdm.setDataGroupId(new Integer(dataMovementForm.getDataGroupId()));
		fdm.setDataMoveName(dataMoveName);
		fdm.setDataMoveDesp(dataMoveDesp);
		fdm.setDataMoveType(new Integer(dataMovementForm.getDataMoveType()));
		
		
		/*调用业务层,添加数据移动*/
		

		boolean result = mp.updateDataMovement(fdm);
		if(result==true){
		   request.setAttribute("funcProsId", dataMovementForm.getFuncProsId());//这句的目的是能够转跳回dataMovement.jsp
		   return mapping.findForward("success");
		}else{
		   return mapping.findForward("failure");
		}
	}
}